name: build and publish imgs workflow

on:
  workflow_call:
    inputs:
      build_type:
        required: true
        type: string

defaults:
  run:
    shell: bash

jobs:
  compute-matrix:
    runs-on: ubuntu-latest
    outputs:
      MATRIX: ${{ steps.compute-matrix.outputs.MATRIX }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Compute Matrix
        id: compute-matrix
        uses: ./.github/actions/compute-matrix
        with:
          BUILD_TYPE: ${{ inputs.build_type }}
  docker:
    needs: compute-matrix
    strategy:
      matrix: ${{ fromJSON(needs.compute-matrix.outputs.MATRIX) }}
      fail-fast: false
    secrets: inherit
    uses: ./.github/workflows/build-image.yml
    with:
      ARCHES: ${{ toJSON(matrix.ARCHES) }}
      CUDA_VER: ${{ matrix.CUDA_VER }}
      LINUX_VER: ${{ matrix.LINUX_VER }}
      PYTHON_VER: ${{ matrix.PYTHON_VER }}
      IMAGE_REPO: ${{ matrix.IMAGE_REPO }}
      BUILD_TYPE: ${{ inputs.build_type }}

  build-multiarch-manifest:
    needs: [docker, compute-matrix]
    strategy:
      matrix: ${{ fromJSON(needs.compute-matrix.outputs.MATRIX) }}
    secrets: inherit
    uses: ./.github/workflows/build-multiarch-manifest.yml
    with:
      ARCHES: ${{ toJSON(matrix.ARCHES) }}
      CUDA_VER: ${{ matrix.CUDA_VER }}
      LINUX_VER: ${{ matrix.LINUX_VER }}
      PYTHON_VER: ${{ matrix.PYTHON_VER }}
      IMAGE_REPO: ${{ matrix.IMAGE_REPO }}
      BUILD_TYPE: ${{ inputs.build_type }}

  delete-temp-images:
    needs: [compute-matrix, build-multiarch-manifest]
    if: inputs.build_type == 'branch'
    strategy:
      matrix: ${{ fromJSON(needs.compute-matrix.outputs.MATRIX) }}
      fail-fast: false
    secrets: inherit
    uses: ./.github/workflows/delete-temp-images.yml
    with:
      ARCHES: ${{ toJSON(matrix.ARCHES) }}
      CUDA_VER: ${{ matrix.CUDA_VER }}
      IMAGE_REPO: ${{ matrix.IMAGE_REPO }}
      LINUX_VER: ${{ matrix.LINUX_VER }}
      PYTHON_VER: ${{ matrix.PYTHON_VER }}
      BUILD_TYPE: ${{ inputs.build_type }}
